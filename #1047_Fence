#1047 울타리
#cf
#Fast I/O
#Learned
import sys, math
from collections import deque
def print(string=""):
  sys.stdout.write(string+"\n")
def print(inte=0):
  sys.stdout.write(str(inte)+"\n")
def input():
  return sys.stdin.readline().rstrip()
sys.setrecursionlimit(111111111)

n=int(input())
X=dict()
Y=dict()
V=dict()
for i in range(1,n+1):
  x,y,v=map(int,input().split())
  X[i]=x
  Y[i]=y
  V[i]=v

wood=0
cnt=0
benefit=[0]*n
while True:
  Xs=sorted(list(X.values()))
  Ys=sorted(list(Y.values()))
  Vs=sorted(list(V.values()))
  need=2*(Xs[-1]-Xs[0]+Ys[-1]-Ys[0])
  if need<=wood: break
  for i in list(X.keys()):
    c=V.get(i)
    if X[i]==Xs[0]:
      c+=2*(Xs[1]-Xs[0])
    if X[i]==Xs[-1]:
      c+=2*(Xs[-1]-Xs[-2])
    if Y[i]==Ys[-1]:
      c+=2*(Ys[-1]-Ys[-2])
    if Y[i]==Ys[0]:
      c+=2*(Ys[1]-Ys[0])
    benefit[i-1]=c
  #print(benefit)
  ind=benefit.index(max(benefit))+1
  wood+=V.get(ind)
  cnt+=1
  benefit[ind-1]=0
  del X[ind]
  del Y[ind]
  del V[ind]
print(cnt)
      
