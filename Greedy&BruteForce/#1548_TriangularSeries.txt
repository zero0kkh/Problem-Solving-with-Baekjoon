#1548 부분 삼각 수열
'''
TCs
1*5 5*2 10*1
1*6 6*3 7*3 8*3
4*5 6*7 9*1 11*2: Stmp reverse가 필요한 반례
=>(숫자. 개수)로 묶어서 가장 큰 묶음에 대해서 (num,cnt)-> num*2보다 작은 애들 찾아서 병합 ->(num, cnt+cnt1) or (num1,cnt+cnt1)~~>
'''
n=int(input())
nums=list(map(int,input().split()))
nums.sort()
S=[] #[cnt,[num1, num2, ...(descending order)]]
tmp=nums[0]
cnt=0
for num in nums:
  if tmp==num: cnt+=1
  else:
    S.append([cnt,[tmp]*cnt])
    tmp=num
    cnt=1
S.append([cnt,[tmp]*cnt])

M=0
s=S.pop()
M=s[0]
Stmp=[]
while S:
  print(S)
  print(s)
  if S[-1][0]>1 and s[1][0]<S[-1][1][-1]+S[-1][1][-2]:
    s[1].extend(S[-1][1])
    s[0]+=S[-1][0]
    Stmp.append(S.pop())
    continue
  elif S[-1][0]==1 and s[1][0]<s[1][-1]+S[-1][1][0]:
    s[1].append(S[-1][1][0])
    s[0]+=1
    Stmp.append(S.pop())
    continue
  elif s[1][0]<s[1][-1]+S[-1][1][-1]:
    if M<s[0]+1: M=s[0]+1
  else:
    if M<s[0]: M=s[0]
  Stmp.reverse()
  S.extend(Stmp)
  Stmp=[]
  s=S.pop()
if M<s[0]: M=s[0]
print(M)
