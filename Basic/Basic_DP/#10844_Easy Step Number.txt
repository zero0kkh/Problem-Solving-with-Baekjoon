#10844: 쉬운 계단 수
# 2D DP
n=int(input())
DP=[[0 for i in range(10)] for j in range(n+1)]
# Memoization space for all possible cases(subproblems): 0~n *_0~_9
# Deep copy (for-) vs shallow copy (*)
#bottom-up
# -0<-_1
# _1<-_0,_2
# _2<-_1,_3
# _3<-_2,_4
# _4<-_3,_5
# _5<-_4,_6
# _6<-_5,_7
# _7<-_6,_8
# _8<_7,_9
# _9<-_8
DP[1]=[0,1,1,1,1,1,1,1,1,1]
if n>1:
  for j in range(2,n+1):
    DP[j][0]=DP[j-1][1]
    DP[j][1]=DP[j-1][0]+DP[j-1][2]
    DP[j][2]=DP[j-1][1]+DP[j-1][3]
    DP[j][3]=DP[j-1][2]+DP[j-1][4]
    DP[j][4]=DP[j-1][3]+DP[j-1][5]
    DP[j][5]=DP[j-1][4]+DP[j-1][6]
    DP[j][6]=DP[j-1][5]+DP[j-1][7]
    DP[j][7]=DP[j-1][6]+DP[j-1][8]
    DP[j][8]=DP[j-1][7]+DP[j-1][9]
    DP[j][9]=DP[j-1][8]
    #OR double for-statement with k in range(10) DP[j][k]
print(sum(DP[n])%1000000000)